import React from "react";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogDescription,
} from "../../components/Dialog"; // üîπ –∑–º—ñ–Ω–∏—Ç–∏ —à–ª—è—Ö –ø—ñ–¥ —Ç–≤—ñ–π –ø—Ä–æ—î–∫—Ç
import { Badge } from "../../components/Badge";
import { Package, CreditCard, MapPin, Clock, Phone } from "lucide-react";
import type { IRentalDetailsDialogProps } from "./types";



export const RentalDetailsDialog: React.FC<IRentalDetailsDialogProps> = ({
  rentalDetailsModal,
  setRentalDetailsModal,
}) => {
  const rental = rentalDetailsModal;
  const today = new Date().setHours(0, 0, 0, 0);

  return (
    <Dialog open={!!rental} onOpenChange={() => setRentalDetailsModal(null)}>
      <DialogContent className="sm:max-w-2xl bg-white">
        <DialogHeader>
          <DialogTitle className="!font-semibold">–î–µ—Ç–∞–ª—ñ –æ—Ä–µ–Ω–¥–∏</DialogTitle>
          <DialogDescription>
            –ü–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –æ—Ä–µ–Ω–¥—É –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è
          </DialogDescription>
        </DialogHeader>

        {rental ? (
          <div className="space-y-6">
            {/* –ù–∞–∑–≤–∞ —ñ —Å—Ç–∞—Ç—É—Å */}
            <div className="flex items-center justify-between">
              <h3 className="text-xl !font-bold">
                {{
                  ski: "–õ–∏–∂—ñ",
                  snowboard: "–°–Ω–æ—É–±–æ—Ä–¥",
                  boots: "–ß–µ—Ä–µ–≤–∏–∫–∏",
                  helmet: "–®–æ–ª–æ–º",
                  suit: "–ö–æ—Å—Ç—é–º",
                }[rental.type] || rental.type}{" "}
                {rental.brand}
              </h3>

              <Badge
                className={
                  new Date(rental.checkOut).setHours(0, 0, 0, 0) >= today
                    ? "bg-green-100 text-green-800"
                    : "bg-blue-100 text-blue-800"
                }
              >
                {new Date(rental.checkOut).setHours(0, 0, 0, 0) >= today
                  ? "–ê–∫—Ç–∏–≤–Ω–∞ –æ—Ä–µ–Ω–¥–∞"
                  : "–ú–∞–π–±—É—Ç–Ω—è –æ—Ä–µ–Ω–¥–∞"}
              </Badge>
            </div>

            {/* –û—Å–Ω–æ–≤–Ω–∞ —Å—ñ—Ç–∫–∞ */}
            <div className="grid md:grid-cols-2 gap-6">
              {/* –õ—ñ–≤–∞ –∫–æ–ª–æ–Ω–∫–∞ */}
              <div className="space-y-4">
                {/* –û–±–ª–∞–¥–Ω–∞–Ω–Ω—è */}
                <Section
                  icon={<Package className="h-5 w-5 text-yellow-400" />}
                  title="–û–±–ª–∞–¥–Ω–∞–Ω–Ω—è"
                >
                  <InfoRow
                    label="–ù–∞–∑–≤–∞:"
                    value={`${{
                      ski: "–õ–∏–∂—ñ",
                      snowboard: "–°–Ω–æ—É–±–æ—Ä–¥",
                      boots: "–ß–µ—Ä–µ–≤–∏–∫–∏",
                      helmet: "–®–æ–ª–æ–º",
                      suit: "–ö–æ—Å—Ç—é–º",
                    }[rental.type] || rental.type} ${rental.brand}`}
                  />
                  <InfoRow label="–†–æ–∑–º—ñ—Ä:" value={rental.size} />
                  <InfoRow label="–°—Ç–∞–Ω:" value="–í—ñ–¥–º—ñ–Ω–Ω–∏–π" />
                  <InfoRow label="–ö—ñ–ª—å–∫—ñ—Å—Ç—å:" value={rental.quantity} />
                </Section>

                {/* –í–∞—Ä—Ç—ñ—Å—Ç—å */}
                <Section
                  icon={<CreditCard className="h-5 w-5 text-yellow-400" />}
                  title="–í–∞—Ä—Ç—ñ—Å—Ç—å"
                >
                  <InfoRow
                    label="–û—Ä–µ–Ω–¥–∞:"
                    value={`‚Ç¥${calculateTotal(rental.checkIn, rental.checkOut, rental.pricePerDay, rental.quantity)}`}
                    bold
                  />
                  <InfoRow
                    label="–ó–∞—Å—Ç–∞–≤–∞:"
                    value="‚Ç¥2,000 (–ø–æ–≤–µ—Ä–Ω–µ—Ç—å—Å—è –ø—ñ—Å–ª—è –∑–¥–∞—á—ñ)"
                  />
                </Section>
              </div>

              {/* –ü—Ä–∞–≤–∞ –∫–æ–ª–æ–Ω–∫–∞ */}
              <div className="space-y-4">
                {/* –í–∏–¥–∞—á–∞/–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è */}
                <Section
                  icon={<MapPin className="h-5 w-5 text-yellow-400" />}
                  title="–í–∏–¥–∞—á–∞/–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è"
                >
                  <InfoRow
                    label="–í–∏–¥–∞—á–∞:"
                    value="–ü—É–Ω–∫—Ç –æ—Ä–µ–Ω–¥–∏ (1-–π –ø–æ–≤–µ—Ä—Ö –≥–æ—Ç–µ–ª—é)"
                  />
                  <InfoRow
                    label="–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è:"
                    value="–ü—É–Ω–∫—Ç –æ—Ä–µ–Ω–¥–∏ (1-–π –ø–æ–≤–µ—Ä—Ö –≥–æ—Ç–µ–ª—é)"
                  />
                </Section>

                {/* –î–∞—Ç–∞ –≤–∏–¥–∞—á—ñ/–ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è */}
                <Section
                  icon={<Clock className="h-5 w-5 text-yellow-400" />}
                  title="–î–∞—Ç–∞ –≤–∏–¥–∞—á—ñ/–ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è"
                >
                  <InfoRow
                    label="–í–∏–¥–∞—á–∞:"
                    value={formatDate(rental.checkIn)}
                  />
                  <InfoRow
                    label="–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è:"
                    value={formatDate(rental.checkOut)}
                  />
                </Section>

                {/* –ö–æ–Ω—Ç–∞–∫—Ç–∏ */}
                <Section
                  icon={<Phone className="h-5 w-5 text-yellow-400" />}
                  title="–ö–æ–Ω—Ç–∞–∫—Ç–∏"
                >
                  <p className="text-sm">+380 (44) 123-45-68</p>
                </Section>
              </div>
            </div>
          </div>
        ) : (
          <p>–ù–µ–º–∞—î –¥–µ—Ç–∞–ª–µ–π –¥–ª—è —Ü—ñ—î—ó –æ—Ä–µ–Ω–¥–∏.</p>
        )}
      </DialogContent>
    </Dialog>
  );
};

/* üîπ –î–æ–ø–æ–º—ñ–∂–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó */

const calculateTotal = (checkIn: string, checkOut: string, price: number, quantity: number) => {
  const checkInDate = new Date(checkIn)
	const checkOutDate = new Date(checkOut)
	checkInDate.setHours(0, 0, 0, 0)
	checkOutDate.setHours(0, 0, 0, 0)

	const diffTime = checkOutDate.getTime() - checkInDate.getTime()
	const nights = Math.ceil(diffTime / (1000 * 60 * 60 * 24))
  const total = price * nights * quantity;

  return new Intl.NumberFormat("uk-UA").format(total);
};

const formatDate = (dateStr: string) => {
  const d = new Date(dateStr);
  const y = d.getFullYear();
  const m = String(d.getMonth() + 1).padStart(2, "0");
  const day = String(d.getDate()).padStart(2, "0");
  return `${y}-${m}-${day}`;
};

/* üîπ –î–æ–ø–æ–º—ñ–∂–Ω—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ */

const Section = ({
  icon,
  title,
  children,
}: {
  icon: React.ReactNode;
  title: string;
  children: React.ReactNode;
}) => (
  <div>
    <h5 className="font-semibold mb-2 flex items-center gap-2">
      {icon} {title}
    </h5>
    <div className="space-y-2 text-sm">{children}</div>
  </div>
);

const InfoRow = ({
  label,
  value,
  bold = false,
}: {
  label: string;
  value: string | number;
  bold?: boolean;
}) => (
  <div
    className={`flex justify-between ${bold ? "font-semibold" : ""}`}
  >
    <span className="text-muted-foreground">{label}</span>
    <span className="break-words">{value}</span>
  </div>
);
